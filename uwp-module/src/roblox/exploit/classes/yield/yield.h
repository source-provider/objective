#pragma once
#include <Windows.h>
#include <cstdint>
#include <functional>

struct lua_State;
namespace module {
	class robloxYield {
	private:
		static robloxYield* singleton;
	public:
		using yieldReturn = std::function<int(lua_State* L)>;
	public:
		static auto getSingleton() -> robloxYield*;
		auto haltExecution(lua_State* L, const std::function<yieldReturn()>& yieldedFunction) -> std::intptr_t;
		auto refresh() -> void;
	};
}